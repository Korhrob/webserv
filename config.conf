server {
    listen 8080 default_server;
    server_name 127.0.0.1;

	client_max_body_size 5000000;

	error_page 400 /error/400.html;
	error_page 403 /error/403.html;
    error_page 404 /error/404.html;
	error_page 408 /error/408.html;
	error_page 408 411 415 500 501 505 /error/500.html;

    # test these
    # error_page 502 503 504 /custom_50x.html;
    # error_page;
    # error_page 302;
	# error_page 302 302;
	# error_page qwe qwe.html;

    # root here means if no override is given in the location blocks
    # we always use this as the root
    # test without these
    root www;
    index index.html index.htm index.php;

    location / {
        # root can be here, but usually its directly in the server block
        # root www; 

        # similarly, its earier if index is defined in the server block
		# index .html index.html;

        methods GET;
        cgi .php .py;

        try_files $uri $uri/ $uri.html $uri.htm $uri.php =404;
    }

    location /index/ {
        return 301 /index;
    }

    location /uploads {
        # you shouldn't have to redefine root if its inherited
        # only if you want to override it to be elsewhere
        # root www; 
        methods GET POST DELETE;
        uploadDir www/uploads;
    }

	location /old-index {
		return 301 /index;
	}

	location /google {
		return 307 https://www.google.com;
	}

    location /error {
        methods GET;
        autoindex on;

        # out of scope?
        # autoindex_exact_size off; # optional, hide file size
        # autoindex_localtime on; #optional, shows file timestamps in local time
    }

	location /cgi-bin {
		# fastcgi_pass 127.0.0.1:9000;
    	# fastcgi_param SCRIPT_FILENAME /var/www/html$fastcgi_script_name;
    	# include fastcgi_params;
	}
}

# server {
#     listen 8080;
#     server_name example.org;

# 	root www;
# 	index .html index.html;
# }

# server {
#     listen 9000;
#     server_name example.com;
# }

# server {
#     listen 9000 default_server;
#     server_name example.another.com;
# }
